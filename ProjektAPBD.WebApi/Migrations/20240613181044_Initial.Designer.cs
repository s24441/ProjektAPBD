// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektAPBD.WebApi.Models;

#nullable disable

namespace ProjektAPBD.WebApi.Migrations
{
    [DbContext(typeof(ManagementDbContext))]
    [Migration("20240613181044_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("ClientBaseSequence");

            modelBuilder.HasSequence("ContractBaseSequence");

            modelBuilder.Entity("ProjektAPBD.WebApi.Models.Entities.Abstracts.ClientBase", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [ClientBaseSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("IdClient"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdClient");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("ProjektAPBD.WebApi.Models.Entities.Abstracts.ContractBase", b =>
                {
                    b.Property<int>("IdContract")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [ContractBaseSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("IdContract"));

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdSoftwareProduct")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("Money");

                    b.HasKey("IdContract");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdSoftwareProduct");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("ProjektAPBD.WebApi.Models.Entities.Discount", b =>
                {
                    b.Property<int>("IdDiscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDiscount"));

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSoftwareProduct")
                        .HasColumnType("int");

                    b.Property<int>("PercentageValue")
                        .HasColumnType("int");

                    b.HasKey("IdDiscount");

                    b.HasIndex("IdSoftwareProduct");

                    b.ToTable("Discount", "apbdProj");
                });

            modelBuilder.Entity("ProjektAPBD.WebApi.Models.Entities.Payment", b =>
                {
                    b.Property<int>("IdPayment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPayment"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdContract")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("Money");

                    b.HasKey("IdPayment");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdContract");

                    b.ToTable("Payment", "apbdProj");
                });

            modelBuilder.Entity("ProjektAPBD.WebApi.Models.Entities.SoftwareProduct", b =>
                {
                    b.Property<int>("IdSoftwareProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSoftwareProduct"));

                    b.Property<string>("ActualVersion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ActualVersionReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdSoftwareProduct");

                    b.ToTable("SoftwareProduct", "apbdProj");
                });

            modelBuilder.Entity("ProjektAPBD.WebApi.Models.Entities.Company", b =>
                {
                    b.HasBaseType("ProjektAPBD.WebApi.Models.Entities.Abstracts.ClientBase");

                    b.Property<string>("KrsNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasIndex("KrsNumber")
                        .IsUnique()
                        .HasFilter("[KrsNumber] IS NOT NULL");

                    b.ToTable("Company", "apbdProj");
                });

            modelBuilder.Entity("ProjektAPBD.WebApi.Models.Entities.PhysicalPerson", b =>
                {
                    b.HasBaseType("ProjektAPBD.WebApi.Models.Entities.Abstracts.ClientBase");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasIndex("Pesel")
                        .IsUnique()
                        .HasFilter("[Pesel] IS NOT NULL");

                    b.ToTable("PhysicalPerson", "apbdProj");
                });

            modelBuilder.Entity("ProjektAPBD.WebApi.Models.Entities.Sale", b =>
                {
                    b.HasBaseType("ProjektAPBD.WebApi.Models.Entities.Abstracts.ContractBase");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SupportYearsAmount")
                        .HasColumnType("int");

                    b.ToTable("Sale", "apbdProj");
                });

            modelBuilder.Entity("ProjektAPBD.WebApi.Models.Entities.Subscription", b =>
                {
                    b.HasBaseType("ProjektAPBD.WebApi.Models.Entities.Abstracts.ContractBase");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RenewalPeriod")
                        .HasColumnType("int");

                    b.ToTable("Subscription", "apbdProj");
                });

            modelBuilder.Entity("ProjektAPBD.WebApi.Models.Entities.Abstracts.ContractBase", b =>
                {
                    b.HasOne("ProjektAPBD.WebApi.Models.Entities.Abstracts.ClientBase", "Client")
                        .WithMany("Contracts")
                        .HasForeignKey("IdClient")
                        .IsRequired();

                    b.HasOne("ProjektAPBD.WebApi.Models.Entities.SoftwareProduct", "Product")
                        .WithMany("Contracts")
                        .HasForeignKey("IdSoftwareProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProjektAPBD.WebApi.Models.Entities.Discount", b =>
                {
                    b.HasOne("ProjektAPBD.WebApi.Models.Entities.SoftwareProduct", "Product")
                        .WithMany("Discounts")
                        .HasForeignKey("IdSoftwareProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProjektAPBD.WebApi.Models.Entities.Payment", b =>
                {
                    b.HasOne("ProjektAPBD.WebApi.Models.Entities.Abstracts.ClientBase", "Client")
                        .WithMany("Payments")
                        .HasForeignKey("IdClient")
                        .IsRequired();

                    b.HasOne("ProjektAPBD.WebApi.Models.Entities.Abstracts.ContractBase", "Contract")
                        .WithMany("Payments")
                        .HasForeignKey("IdContract")
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("ProjektAPBD.WebApi.Models.Entities.Abstracts.ClientBase", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("ProjektAPBD.WebApi.Models.Entities.Abstracts.ContractBase", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("ProjektAPBD.WebApi.Models.Entities.SoftwareProduct", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Discounts");
                });
#pragma warning restore 612, 618
        }
    }
}
